name: Docker Build Matrices

# This job generates build matrices using base images built two hours earlier

on: 
  schedule:
    - cron: 0 3 * * *

  # On pull request we test updates to images
  pull_request: []
 
  # On push to main we build and deploy images
  push: 
    branches:
      - main

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      dockerbuild_matrix: ${{ steps.dockerbuild.outputs.dockerbuild_matrix }}
    steps:

    # Using git in the container to diff means we explicitly need to checkout a branch
    # if we use the default of this action we get a detached HEAD state.
    - uses: actions/checkout@v2
      if: github.event_name == 'pull_request'
      with:
         fetch-depth: 0
         ref: ${{ github.event.pull_request.head.ref }}

    - uses: actions/checkout@v2
      if: github.event_name == 'push'
      with:
         fetch-depth: 0

    - name: Generate Build Matrix
      uses: vsoch/uptodate@main
      id: dockerbuild
      with: 
        root: .
        parser: dockerbuild
        changes: true # only include changed uptodate.yaml

  # Allows us to preview/see the matrix
  view:
    needs:
      - generate
    runs-on: ubuntu-latest
    steps:
      - name: View Docker Build Matrix Result
        env:
          result: ${{ needs.generate.outputs.dockerbuild_matrix }}
        run: echo ${result}

  build:
    needs:
      - generate
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        result: ${{ fromJson(needs.generate.outputs.dockerbuild_matrix) }}

    name: "Build ${{ matrix.result.container_name }}"
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: GHCR Login
      if: (github.event_name != 'pull_request')
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Make Space For Build
      run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc

    - name: Build ${{ matrix.result.container_name }}
      id: builder
      env:
        container: ${{ matrix.result.container_name }}
        prefix: ${{ matrix.result.command_prefix }}
        filename: ${{ matrix.result.filename }}
      run: |
        basedir=$(dirname $filename)
        printf "Base directory is ${basedir}\n"
        # Get relative path to PWD and generate dashed name from it
        cd $basedir
        echo "${prefix} -t ghcr.io/rse-radiuss/${container} ."
        ${prefix} -t ghcr.io/rse-radiuss/${container} .

    - name: Deploy Container
      if: (github.event_name != 'pull_request')
      env:
        container: ${{ matrix.result.container_name }}
      run: |
        docker images
        printf "docker push ghcr.io/rse-radiuss/${container}\n"
        docker push ghcr.io/rse-radiuss/${container}
